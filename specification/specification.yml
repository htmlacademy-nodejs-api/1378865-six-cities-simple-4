openapi: 3.0.0
info:
  title: API сервер для демо-проекта «Шесть городов (простой)».
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов (простой)».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
tags:
  - name: users
    description: Действия с пользователем.
  - name: offers
    description: Действия с предложениями по аренде.
  - name: comments
    description: Действия с комментариями.
  - name: cites
    description: Действия с городами.
paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: './schemas/user/userCreate.yml'
        required: true

      responses:
        '201':
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: './schemas/user/userCreated.yml'

        '409':
          description: User with email «email» exists.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля

      requestBody:
        description: Информация для авторизации пользователя.
        content:
          application/json:
            schema:
              $ref: './schemas/user/userLogin.yml'
        required: true

      responses:
        '200':
          description: Пользователь завторизован. Токен пользователя.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Bearer sdsd54s4fs54
                  email:
                    type: string
                    description: 123@mail.ru
                  name:
                    type: string
                    description: Vitaliy
                  avatarPath:
                    type: string
                    description: 2.jpg
                  isPro:
                    type: boolean

        '401':
          description: Неправильный логин или пароль.

        '404':
          description: Пользователь не найден.
    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю

      requestBody:
        description: Токен пользователя.
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: Bearer sdsd54s4fs54
        required: true

      responses:
        '200':
          description: Пользователь авторизован.
          content:
            application/json:
              schema:
                $ref: './schemas/user/userValid.yml'

        '401':
          description: Пользователь не авторизован.

  /users/{userId}/avatar:
    post:
      tags:
        - users
      summary: Загрузить изображение аватара
      description: Загружает изображение аватара пользователя. Изображение
        аватара должно быть в формате `png` или `jpg`.

      responses:
        201:
          description: Аватар заугружен успешно
        400:
          description: Bad request
        401:
          description: Unauthorized

        '403':
          description: У пользователя нет прав редактировать данного пользователя.

  /offers:
    get:
      tags:
        - offers
      summary: Получить список предложений по аренде
      description: Получает список предложений по аренде.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            example: 1

      responses:
        '200':
          description: Список предложений по аренде.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './schemas/offer/offerListItem.yml'

    post:
      tags:
        - offers
      summary: Создать предложение по аренде
      description: Создает новое предложение по аренде.

      requestBody:
        description: Информация для создания нового предложения по аренде.
        content:
          application/json:
            schema:
              $ref: './schemas/offer/offerCreate.yml'
        required: true

      responses:
        '201':
          description: Предложение по аренде создано успешно.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './schemas/offer/offerCreate.yml'
                  - type: object
                    properties:
                      commentCount:
                        type: number
                        example: 2
                      rating:
                        type: number
                        example: 3.7
                      createdAt:
                        type: string
                        example: 12.3.23

        '401':
          description: Для размещения предложения по аренде, пользователь должен быть авторизован.

        '400':
          description: Город с ID {cityId} не найден.

  /offers/{offerId}:
    get:
      tags:
        - offers
      summary: Получение информации по одному предложению по аренде.
      description: Получение детальной информации по одному предложению по аренде.
      parameters:
        - in: path
          name: offerId
          required: true
          schema:
            type: integer

      responses:
        '200':
          description: Информация о предложении по аренде.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './schemas/offer/offerCreate.yml'
                  - type: object
                    properties:
                      commentCount:
                        type: number
                        example: 2
                      createdAt:
                        type: string
                        example: 12.3.23
                      host:
                        $ref: './schemas/user/userValid.yml'
        '404':
          description: Offer with id {offerId} not found.

    patch:
      tags:
        - offers
      summary: Редактирование предложения по аренде
      description: Редактирует выбранное предложение по аренде и возвращает в качестве ответа
        обновленный объект предложения по аренде.
      parameters:
        - in: path
          name: offerId
          required: true
          schema:
            type: integer

      requestBody:
        description: Информация для редактирования предложения по аренде.
        content:
          application/json:
            schema:
              $ref: './schemas/offer/offerCreate.yml'
        required: true

      responses:
        '200':
          description: Отредактированное предложение по аренде.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './schemas/offer/offerCreate.yml'
                  - type: object
                    properties:
                      commentCount:
                        type: number
                        example: 2
                      createdAt:
                        type: string
                        example: 12.3.23
        '400':
          description: Город с ID {cityId} не найден.

        '404':
          description: Offer with id {offerId} not found.

        '401':
          description: Unauthorized

        '403':
          description: У пользователя нет прав редактировать данное предложение по аренде.

    delete:
      tags:
        - offers
      summary: Удаление предложения по аренде
      description: Удаляет предложение по аренде и связанные с ним комментарии.
      parameters:
        - in: path
          name: offerId
          required: true
          schema:
            type: integer

      responses:
        '200':
          description: Предложение по аренде ID:{offerId} удалено.

        '404':
          description: Offer with id {offerId} not found.

        '401':
          description: Пользователь должен быть авторизован.

        '403':
          description: У пользователя нет прав удалять данное предложение по аренде.

    post:
      tags:
        - comments
      summary: Добавление комментария
      description: Добавление комментария к предложению по аренде.
      parameters:
        - in: query
          name: offerId
          required: true
          schema:
            type: integer
            example: 1

      requestBody:
        description: Информация для создания нового комментария.
        content:
          application/json:
            schema:
              $ref: './schemas/comment/comment.yml'
        required: true

      responses:
        '200':
          description: Комментарий создан, присылаю его в ответ.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './schemas/comment/comment.yml'
                  - type: object
                    properties:
                      date:
                        type: string
                        example: 12.3.23

        '401':
          description: Для размещения комментария, пользователь должен быть авторизован.

        '400':
          description: Незаполненны обязательные поля.

  /offers/{offerId}/comments:
    get:
      tags:
        - offers
      summary: Список комментариев предложения по аренде
      description: Получение списка комментариев для определенного предложения по аренде.
      parameters:
        - in: path
          name: offerId
          required: true
          schema:
            type: string
            example: 1

      responses:
        '200':
          description: Список комментариев для предложения по аренде.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: './schemas/comment/comment.yml'
                    - type: object
                      properties:
                        date:
                          type: string
                          example: 12.3.23

        '404':
          description: Offer with {offerId} not found.

  /offers/{offerId}/image:
    post:
      tags:
        - offers
      summary: Загрузить изображение предложения по аренде
      description: Загружает изображение. Изображение должно быть в формате `png` или `jpg`.

      responses:
        '200':
          description: Избражение загруженно.
          content:
            application/json:
              schema:
                type: object
                properties:
                  previewImage:
                    type: string
                    example: dauhwdiuahwdiuh21342.png

        400:
          description: Bad request
        401:
          description: Unauthorized

        '403':
          description: У пользователя нет прав редактировать данное предложение по аренде.

  /offers/{offerId}/pictures:
    post:
      tags:
        - offers
      summary: Загрузить 6 изображений предложения по аренде
      description: Загружает изображения. Изображения должны быть в формате `png` или `jpg`.

      responses:
        '200':
          description: Избражение загруженно.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    images:
                      type: string
                      example: dauhwdiuahwdiuh21342.png

        400:
          description: Images array length must be 6
        401:
          description: Unauthorized

        '403':
          description: У пользователя нет прав редактировать данное предложение по аренде.

  /cites:
    get:
      tags:
        - cites
      summary: Список городов
      description: Получение списка городов.

      responses:
        '200':
          description: Список городов.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: './schemas/city/city.yml'
  /cites/{cityId}:
    get:
      tags:
        - cites
      summary: Получение одного города
      description: Получение одного города.
      parameters:
        - in: path
          name: cityId
          required: true
          schema:
            type: string
            example: shaiuhd27661djawd

      responses:
        '200':
          description: Получение одного города.
          content:
            application/json:
              schema:
                $ref: './schemas/city/city.yml'
        '404':
          description: City with id {cityId} not found.

  /cites/{cityId}/offers:
    get:
      tags:
        - cites
      summary: Получить список предложений по аренде по одному городу
      description: Получение одного города.
      parameters:
        - in: path
          name: cityId
          required: true
          schema:
            type: string
            example: shaiuhd27661djawd
        - in: query
          name: limit
          schema:
            type: integer
            example: 1

      responses:
        '200':
          description: Список предложений по аренде.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './schemas/offer/offerListItem.yml'

        '404':
          description: City with id {cityId} not found.
